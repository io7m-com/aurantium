<?xml version="1.0" encoding="UTF-8" ?>

<Section title="Overview"
         xmlns="urn:com.io7m.structural:8:0">
  <Paragraph>
    The <Term type="package">aurantium</Term> file format is optimized for the storage of audio data used for
    real-time audio applications. The format provides the following features:
  </Paragraph>
  <FormalItem title="Features">
    <ListUnordered type="features">
      <Item>
        Detailed information about the format of audio data is included in all files. Audio data,
        in the common case, can be introspected without requiring consulting any kind of external specification.
        The information provided about audio data includes sampling rate, channel depth and type information,
        and byte ordering for formats that use components larger than a single octet.
      </Item>
      <Item>
        Ease of parsing. The binary format is designed to facilitate easy and secure parsing without requiring
        backtracking or unbounded storage use. A competent developer should be able to implement a full parser
        within a week or two of work.
      </Item>
      <Item>
        Carefully layered metadata. Consumers are not required to understand everything about the underlying
        audio data in order to make use of it. For example, if audio data is encoded using an unusual and/or
        proprietary format, consumers can still trivially extract the raw data even if they cannot necessarily
        understand the data.
      </Item>
      <Item>
        Extensibility. The format consists of explicitly-sized sections with a well-defined ordering. Consumers
        can trivially skip sections that they do not understand. Sections carry unique 64-bit identifiers; if a
        section has an identifier not recognized by a consumer, the consumer may skip the section. The raw bytes
        that comprise a section can be extracted regardless of whether or not the consumer understands them.
        This specification defines a number of "standard" audio data types that consumers are expected to understand,
        but the format also allows for declaring new self-describing audio data types.
      </Item>
      <Item>
        Practical metadata. The format provides a standard section that contains <LinkExternal
        target="https://en.wikipedia.org/wiki/UTF-8">UTF-8</LinkExternal> encoded keys and values intended to
        hold arbitrary metadata. Metadata that cannot be expressed as a UTF-8 string can be included as a custom
        section that can be skipped by consumers that do not recognize it.
      </Item>
    </ListUnordered>
  </FormalItem>
  <Paragraph>
    This section of the specification documents the abstract model that the <Term type="package">aurantium</Term>
    format uses to express all of the above.
  </Paragraph>
</Section>